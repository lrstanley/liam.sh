// Copyright (c) Liam Stanley <me@liamstanley.io>. All rights reserved. Use
// of this source code is governed by the MIT license that can be found in
// the LICENSE file.
//
// DO NOT EDIT, CODE GENERATED BY entc.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// LabelsColumns holds the columns for the "labels" table.
	LabelsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "name", Type: field.TypeString, Unique: true},
	}
	// LabelsTable holds the schema information for the "labels" table.
	LabelsTable = &schema.Table{
		Name:       "labels",
		Columns:    LabelsColumns,
		PrimaryKey: []*schema.Column{LabelsColumns[0]},
	}
	// PostsColumns holds the columns for the "posts" table.
	PostsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "slug", Type: field.TypeString, Unique: true},
		{Name: "title", Type: field.TypeString, Size: 100},
		{Name: "content", Type: field.TypeString},
		{Name: "content_html", Type: field.TypeString},
		{Name: "summary", Type: field.TypeString},
		{Name: "published_at", Type: field.TypeTime},
		{Name: "user_posts", Type: field.TypeInt},
	}
	// PostsTable holds the schema information for the "posts" table.
	PostsTable = &schema.Table{
		Name:       "posts",
		Columns:    PostsColumns,
		PrimaryKey: []*schema.Column{PostsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "posts_users_posts",
				Columns:    []*schema.Column{PostsColumns[9]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// UsersColumns holds the columns for the "users" table.
	UsersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "user_id", Type: field.TypeInt, Unique: true},
		{Name: "login", Type: field.TypeString, Unique: true},
		{Name: "name", Type: field.TypeString, Nullable: true, Size: 400},
		{Name: "avatar_url", Type: field.TypeString, Nullable: true, Size: 2048},
		{Name: "html_url", Type: field.TypeString, Nullable: true, Size: 2048},
		{Name: "email", Type: field.TypeString, Nullable: true, Size: 320},
		{Name: "location", Type: field.TypeString, Nullable: true, Size: 400},
		{Name: "bio", Type: field.TypeString, Nullable: true, Size: 400},
	}
	// UsersTable holds the schema information for the "users" table.
	UsersTable = &schema.Table{
		Name:       "users",
		Columns:    UsersColumns,
		PrimaryKey: []*schema.Column{UsersColumns[0]},
	}
	// LabelPostsColumns holds the columns for the "label_posts" table.
	LabelPostsColumns = []*schema.Column{
		{Name: "label_id", Type: field.TypeInt},
		{Name: "post_id", Type: field.TypeInt},
	}
	// LabelPostsTable holds the schema information for the "label_posts" table.
	LabelPostsTable = &schema.Table{
		Name:       "label_posts",
		Columns:    LabelPostsColumns,
		PrimaryKey: []*schema.Column{LabelPostsColumns[0], LabelPostsColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "label_posts_label_id",
				Columns:    []*schema.Column{LabelPostsColumns[0]},
				RefColumns: []*schema.Column{LabelsColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "label_posts_post_id",
				Columns:    []*schema.Column{LabelPostsColumns[1]},
				RefColumns: []*schema.Column{PostsColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		LabelsTable,
		PostsTable,
		UsersTable,
		LabelPostsTable,
	}
)

func init() {
	PostsTable.ForeignKeys[0].RefTable = UsersTable
	LabelPostsTable.ForeignKeys[0].RefTable = LabelsTable
	LabelPostsTable.ForeignKeys[1].RefTable = PostsTable
}
